.row
  .col
    = bootstrap_form_for(@kit) do |f|
      - if @kit.errors.any?
        #error_explanation
          %h2= "#{pluralize(@kit.errors.count, "error")} prohibited this kit from being saved:"
          %ul
            - @kit.errors.full_messages.each do |message|
              %li= message
      .row
        .col
          = f.text_field :name
        .col
          - kit_scale_options = KitScale.increasing.pluck(:id, :name).map {|id, name| { value: id, label: name }}
          = f.label :kit_scale
          = render('multi_select', name: "kit[kit_scale_id]", current_value: @kit.kit_scale_id, collection: kit_scale_options)
      .row
        .col
          - related_kit_options = Kit.pluck(:id, :handle).map {|id, handle| { value: id, label: handle }}
          = f.label :related_kits
          = render('multi_select', name: "kit[related_kit_ids][]", current_value: @kit.kit_link_ids, collection: related_kit_options)
        .col
          = f.label :materials
          - material_options = Material.all.pluck(:id, :name).map {|id, name| { value: id, label: name }}
          = render('multi_select', name: "kit[material_ids][]", collection: material_options, current_value: @kit.material_ids)

      .row
        .col
          - producer_options = Producer.all.pluck(:id, :name).map {|id, name| { value: id, label: name }}
          = f.label :producers
          = render('multi_select', name: "kit[producer_ids][]", collection: producer_options, current_value: @kit.producer_ids)

        .col
          - kit_line_options = KitLine.all.pluck(:id, :name).map {|id, name| { value: id, label: name }}
          = f.label :kit_lines
          = render('multi_select', name: "kit[kit_line_ids][]", collection: kit_line_options, current_value: @kit.kit_line_ids)

        .col
          - designer_options = Designer.all.pluck(:id, :name).map {|id, name| { value: id, label: name }}
          = f.label :designers
          = render('multi_select', name: "kit[designer_ids][]", collection: designer_options, current_value: @kit.designer_ids)

      .row
        .col
          = f.label :source_materials
          = render 'multi_select', name: "kit[source_material_ids][]", current_value: @kit.source_material_ids, collection: SourceMaterial.all.pluck(:id, :name, :slug).map {|id, name, slug| { value: id, label: "#{name} (#{slug})" }}

      .row
        .col
          = f.text_area :notes

      - if @create_boxes
        .row.mt-2
          .col
            %h3 Boxes of this kit
            = f.check_box :persist_box, switch: true, label: 'Create a copy of this kit your backlog?', checked: true
            .border.rounded.p-2
              = f.fields_for :kit_instances do |ki_f|
                = ki_f.select :status, KitInstance::STATUSES.keys, selected: "OWNED"
                = ki_f.label :location
                - location_options = Location.pluck(:id, :name).map {|id, name| { value: id, label: name }}
                = render('multi_select', name: 'kit_instance[location_id]', current_value: nil, collection: location_options)
                = ki_f.text_area :notes

      .row.mt-2
        .col
          .actions
            = f.submit 'Save', render_as_button: true
